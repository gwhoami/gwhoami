{"ast":null,"code":"var _jsxFileName = \"D:\\\\Git-Repo\\\\gwhoami\\\\react-gwhoami\\\\src\\\\component\\\\forms\\\\index.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$(),\n    _s5 = $RefreshSig$(),\n    _s6 = $RefreshSig$(),\n    _s7 = $RefreshSig$();\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React, { useRef, useState } from 'react';\nimport ReactDatePicker from \"react-datepicker\"; //import PasswordStrengthBar from 'react-password-strength-bar';\n\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport PasswordStrengthBar from 'react-password-strength-bar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const InputText = /*#__PURE__*/_s( /*#__PURE__*/React.memo(_c = _s(_ref => {\n  _s();\n\n  let {\n    styleClass,\n    formKey,\n    formRef,\n    uiRefresh,\n    label,\n    placeholder,\n    required = \"\"\n  } = _ref;\n\n  const isNotValid = () => required && formRef.current.isSubmit && !formRef.current[formKey];\n\n  const inValidBorder = () => isNotValid() ? ' border-red-500' : '';\n\n  const [, refresh] = useState(-1);\n\n  const setFormVal = e => {\n    formRef.current[formKey] = e.currentTarget.value;\n    refresh(Date.now());\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${styleClass}${isNotValid() ? ' mark-err' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: `text-gray-600 mb-1${required ? ' required' : ''}`,\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      required: !!required,\n      className: `w-full p-1  border border-slate-300 hover:border-red-800 ... rounded${inValidBorder()}`,\n      placeholder: placeholder,\n      value: formRef.current[formKey],\n      onChange: e => setFormVal(e)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), isNotValid() && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-start items-center text-red-500 text-xs mt-1\",\n      children: required\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 30\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n}, \"icYC9ua6w0gagiyOPdrwJul0n2I=\")), \"icYC9ua6w0gagiyOPdrwJul0n2I=\");\n_c2 = InputText;\nexport const InputEmail = /*#__PURE__*/_s2( /*#__PURE__*/React.memo(_c3 = _s2(_ref2 => {\n  _s2();\n\n  let {\n    styleClass,\n    formKey,\n    formRef,\n    uiRefresh,\n    label,\n    placeholder,\n    required = \"\",\n    readonly = false,\n    disabled = false\n  } = _ref2;\n  const isEmail = useRef(new RegExp('[a-z0-9]+@[a-z]+\\\\.[a-z]{2,3}'));\n\n  const isNotValid = () => required && formRef.current.isSubmit && (!formRef.current[formKey] || !isEmail.current.test(formRef.current[formKey]));\n\n  const inValidBorder = () => isNotValid() ? ' border-red-500' : `${disabled ? ' bg-gray-200' : ''}`;\n\n  const errorNum = () => !formRef.current[formKey] ? 1 : !isEmail.current.test(formRef.current[formKey]) ? 2 : 0;\n\n  const [, refresh] = useState(-1);\n\n  const setFormVal = e => {\n    formRef.current[formKey] = e.currentTarget.value;\n    refresh(Date.now());\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${styleClass}${isNotValid() ? ' mark-err' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: `text-gray-600 mb-1${required ? ' required' : ''}`,\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      required: !!required,\n      className: `w-full p-1 border border-slate-300 hover:border-red-800 ... rounded${inValidBorder()}`,\n      placeholder: placeholder,\n      value: formRef.current[formKey],\n      onChange: e => setFormVal(e),\n      readOnly: readonly,\n      disabled: disabled\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), isNotValid() && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-start items-center text-red-500 text-xs mt-1\",\n      children: errorNum() === 1 ? required : 'Invalid email address'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 30\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}, \"Tg4pW3GuRONNKOODofhEdbT3s3w=\")), \"Tg4pW3GuRONNKOODofhEdbT3s3w=\");\n_c4 = InputEmail;\nexport const InputRadio = /*#__PURE__*/_s3( /*#__PURE__*/React.memo(_c5 = _s3(_ref3 => {\n  _s3();\n\n  let {\n    styleClass = \"\",\n    formKey,\n    formRef,\n    ui,\n    name,\n    label,\n    values = [],\n    icons = [],\n    required = \"\",\n    colors = []\n  } = _ref3;\n\n  const isNotValid = () => required && formRef.current.isSubmit && !formRef.current[formKey];\n\n  const inValidBorder = () => isNotValid() ? 'border-red-500' : 'border-gray-400';\n\n  const [, refresh] = useState(-1);\n\n  const setFormVal = e => {\n    formRef.current[formKey] = e.currentTarget.value;\n    refresh(Date.now());\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${styleClass}${isNotValid() ? ' mark-err' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"text-gray-600 mb-1 required\",\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex\",\n      children: values.map((r, i) => /*#__PURE__*/_jsxDEV(\"label\", {\n        className: `inline-flex items-center${i > 0 ? ' ml-5' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"radio\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              value: \"Male\",\n              checked: this.state.selectedOption === \"Male\",\n              onChange: this.onValueChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 33\n            }, this), \"Male\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"radio\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              value: \"Female\",\n              checked: this.state.selectedOption === \"Female\",\n              onChange: this.onValueChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 33\n            }, this), \"Female\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"radio\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              value: \"Other\",\n              checked: this.state.selectedOption === \"Other\",\n              onChange: this.onValueChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 33\n            }, this), \"Other\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Selected option is : \", this.state.selectedOption]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          className: `rounded-full ${inValidBorder()}  text-blue-400 shadow-sm focus:border-blue-700 focus:ring focus:ring-offset-0 focus:ring-indigo-200 focus:ring-opacity-50`,\n          name: name,\n          value: r,\n          defaultChecked: formRef.current[formKey] === r,\n          onChange: e => setFormVal(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"ml-2 text-gray-600\",\n          children: [icons[i] && /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: icons[i],\n            className: \"text-2xl mr-1\",\n            style: {\n              color: formRef.current[formKey] === r ? colors[i] || 'rgb(75 85 99)' : 'rgb(75 85 99)'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 42\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: r\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 25\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), isNotValid() && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-start items-center text-red-500 text-xs mt-1\",\n      children: required\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 30\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n}, \"icYC9ua6w0gagiyOPdrwJul0n2I=\")), \"icYC9ua6w0gagiyOPdrwJul0n2I=\");\n_c6 = InputRadio;\nexport const InputSelect = /*#__PURE__*/_s4( /*#__PURE__*/React.memo(_c7 = _s4(_ref4 => {\n  _s4();\n\n  let {\n    styleClass,\n    formKey,\n    formRef,\n    ui,\n    label,\n    options = [],\n    callback = null,\n    placeholder = \"\",\n    required = \"\",\n    ID = \"\"\n  } = _ref4;\n\n  const isNotValid = () => required && formRef.current.isSubmit && !formRef.current[formKey];\n\n  const inValidBorder = () => isNotValid() ? 'border-red-500' : 'border-gray-400';\n\n  const [, refresh] = useState(-1);\n\n  const setFormVal = e => {\n    formRef.current[formKey] = e.currentTarget.value;\n    if (callback) callback();else refresh(Date.now());\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${styleClass}${isNotValid() ? ' mark-err' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"text-gray-600 mb-1 required\",\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      className: `border ${inValidBorder()} w-full p-1 border border-slate-300 hover:border-red-800 ... rounded`,\n      defaultValue: formRef.current[formKey],\n      onChange: e => setFormVal(e),\n      id: ID,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: placeholder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this), options.map((itm, idx) => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: itm.key || itm,\n        children: itm.name || itm\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 44\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }, this), isNotValid() && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-start items-center text-red-500 text-xs mt-1\",\n      children: required\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 30\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 9\n  }, this);\n}, \"icYC9ua6w0gagiyOPdrwJul0n2I=\")), \"icYC9ua6w0gagiyOPdrwJul0n2I=\");\n_c8 = InputSelect;\nexport const InputPhone = /*#__PURE__*/_s5( /*#__PURE__*/React.memo(_c9 = _s5(_ref5 => {\n  _s5();\n\n  let {\n    styleClass,\n    formKey,\n    formRef,\n    ui,\n    label,\n    callback = null,\n    code,\n    placeholder = \"\",\n    required = \"\",\n    ID = \"\"\n  } = _ref5;\n\n  const isNotValid = () => required && formRef.current.isSubmit && !formRef.current[formKey];\n\n  const inValidBorder = () => isNotValid() ? 'border-red-500' : 'border-gray-400';\n\n  const [, refresh] = useState(-1);\n\n  const setFormVal = e => {\n    formRef.current[formKey] = e.currentTarget.value;\n    if (callback) callback();else refresh(Date.now());\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${styleClass}${isNotValid() ? ' mark-err' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"text-gray-600 mb-1 required\",\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: `inline-flex items-center justify-center px-3 text-sm text-gray-900 bg-gray-200 rounded-l-md border border-slate-300 hover:border-red-800 ... ${inValidBorder()} dark:bg-gray-600 dark:text-gray-400 dark:border-gray-600 w-12`,\n        children: formRef.current[code] || '-'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: `rounded-none rounded-r-lg border border-slate-300 hover:border-red-800 ... border ${inValidBorder()} text-gray-900 focus:ring-blue-500 focus:border-blue-500 block flex-1 min-w-0 w-full p-1 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500`,\n        placeholder: placeholder,\n        value: formRef.current[formKey],\n        onChange: e => setFormVal(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }, this), isNotValid() && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-start items-center text-red-500 text-xs mt-1\",\n      children: required\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 30\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 9\n  }, this);\n}, \"icYC9ua6w0gagiyOPdrwJul0n2I=\")), \"icYC9ua6w0gagiyOPdrwJul0n2I=\");\n_c10 = InputPhone;\nexport const InputDOB = /*#__PURE__*/_s6( /*#__PURE__*/React.memo(_c11 = _s6(_ref6 => {\n  _s6();\n\n  let {\n    styleClass,\n    formKey,\n    formRef,\n    ui,\n    label,\n    callback = null,\n    code,\n    placeholder = \"\",\n    required = \"\",\n    ID = \"\"\n  } = _ref6;\n\n  const isNotValid = () => required && formRef.current.isSubmit && !formRef.current[formKey];\n\n  const inValidBorder = () => isNotValid() ? 'border-red-500' : 'border-gray-400';\n\n  const [, refresh] = useState(-1);\n\n  const setFormVal = date => {\n    formRef.current[formKey] = date;\n    if (callback) callback();else refresh(Date.now());\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${styleClass}${isNotValid() ? ' mark-err' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"text-gray-600 mb-1 required\",\n      children: \"DOB\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ReactDatePicker, {\n      selected: formRef.current[formKey],\n      onChange: date => setFormVal(date),\n      placeholderText: placeholder,\n      className: `border ${inValidBorder()} w-full p-1 border border-slate-300 hover:border-red-800 ... rounded`,\n      dateFormat: 'MMM/dd/yyyy'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }, this), isNotValid() && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-start items-center text-red-500 text-xs mt-1\",\n      children: required\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 30\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 176,\n    columnNumber: 9\n  }, this);\n}, \"icYC9ua6w0gagiyOPdrwJul0n2I=\")), \"icYC9ua6w0gagiyOPdrwJul0n2I=\");\n_c12 = InputDOB;\nexport const PasswordCheck = /*#__PURE__*/_s7( /*#__PURE__*/React.memo(_c13 = _s7(_ref7 => {\n  _s7();\n\n  let {\n    styleClass,\n    formKey,\n    formRef,\n    ui,\n    ID = \"\"\n  } = _ref7;\n\n  const isNotValid = () => formRef.current.isSubmit && !formRef.current[formKey];\n\n  const inValidBorder = () => {\n    return isNotValid() ? 'border-red-500' : formRef.current.isSubmit && feed >= 0 && feed < 2 ? 'border-red-500' : 'border-gray-400';\n  };\n\n  const [feed, setFeed] = useState(0);\n  const [, refresh] = useState(-1);\n\n  const setFormVal = e => {\n    formRef.current[formKey] = e.currentTarget.value;\n    refresh(Date.now());\n  };\n\n  const rePass = e => {\n    formRef.current[`${formKey}_re`] = e.currentTarget.value;\n    refresh(Date.now());\n  };\n\n  const scoreFeed = (score, feed) => {\n    setFeed(score);\n  };\n\n  const comparePass = () => {\n    return formRef.current[formKey] !== formRef.current[`${formKey}_re`];\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `flex flex-col${isNotValid() || formRef.current.isSubmit && feed >= 0 && feed < 2 ? ' mark-err' : ''}${formRef.current[formKey].length ? '' : ' mb-4'}`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"flex flex-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"w-1/2 ... \",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"text-gray-600 mb-1 required\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            className: `border ${inValidBorder()} w-full p-1 border border-slate-300 hover:border-red-800 ... rounded focus:border-dodge-b`,\n            placeholder: \"Password\",\n            value: formRef.current[formKey],\n            onChange: evt => setFormVal(evt)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 25\n          }, this), isNotValid() && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-start items-center text-red-500 text-xs mt-1\",\n            children: \"Password is required\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 42\n          }, this), formRef.current[formKey].length > 0 && /*#__PURE__*/_jsxDEV(PasswordStrengthBar, {\n            password: formRef.current[formKey],\n            className: \"mt-2\",\n            onChangeScore: (score, feed) => scoreFeed(score, feed)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 65\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 21\n        }, this), \"\\xA0\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"w-1/2 ... \",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"text-gray-600 mb-1 required\",\n            children: \"Re-Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            className: `border ${comparePass() ? 'border-red-500' : 'border-gray-400'} w-full p-1 border border-slate-300 hover:border-red-800 ... rounded focus:border-dodge-b`,\n            placeholder: \"Re-type password\",\n            value: formRef.current[`${formKey}_re`],\n            onChange: e => rePass(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 25\n          }, this), comparePass() && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-start items-center text-red-500 text-xs mt-1\",\n            children: \"Password not matched\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 43\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}, \"hgED/CahaUBTgfNmn6wtF2PpRho=\")), \"hgED/CahaUBTgfNmn6wtF2PpRho=\");\n_c14 = PasswordCheck;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13, _c14;\n\n$RefreshReg$(_c, \"InputText$React.memo\");\n$RefreshReg$(_c2, \"InputText\");\n$RefreshReg$(_c3, \"InputEmail$React.memo\");\n$RefreshReg$(_c4, \"InputEmail\");\n$RefreshReg$(_c5, \"InputRadio$React.memo\");\n$RefreshReg$(_c6, \"InputRadio\");\n$RefreshReg$(_c7, \"InputSelect$React.memo\");\n$RefreshReg$(_c8, \"InputSelect\");\n$RefreshReg$(_c9, \"InputPhone$React.memo\");\n$RefreshReg$(_c10, \"InputPhone\");\n$RefreshReg$(_c11, \"InputDOB$React.memo\");\n$RefreshReg$(_c12, \"InputDOB\");\n$RefreshReg$(_c13, \"PasswordCheck$React.memo\");\n$RefreshReg$(_c14, \"PasswordCheck\");","map":{"version":3,"sources":["D:/Git-Repo/gwhoami/react-gwhoami/src/component/forms/index.js"],"names":["FontAwesomeIcon","React","useRef","useState","ReactDatePicker","PasswordStrengthBar","InputText","memo","styleClass","formKey","formRef","uiRefresh","label","placeholder","required","isNotValid","current","isSubmit","inValidBorder","refresh","setFormVal","e","currentTarget","value","Date","now","InputEmail","readonly","disabled","isEmail","RegExp","test","errorNum","InputRadio","ui","name","values","icons","colors","map","r","i","state","selectedOption","onValueChange","color","InputSelect","options","callback","ID","itm","idx","key","InputPhone","code","InputDOB","date","PasswordCheck","feed","setFeed","rePass","scoreFeed","score","comparePass","length","evt"],"mappings":";;;;;;;;;AAAA,SAASA,eAAT,QAAgC,gCAAhC;AACA,OAAOC,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC;AACA,OAAOC,eAAP,MAA4B,kBAA5B,C,CACA;;AACA,OAAO,4CAAP;AACA,OAAOC,mBAAP,MAAgC,6BAAhC;;;AAEA,OAAO,MAAMC,SAAS,iCAAGL,KAAK,CAACM,IAAN,SAAW,QAAoF;AAAA;;AAAA,MAAnF;AAAEC,IAAAA,UAAF;AAAcC,IAAAA,OAAd;AAAuBC,IAAAA,OAAvB;AAAgCC,IAAAA,SAAhC;AAA2CC,IAAAA,KAA3C;AAAkDC,IAAAA,WAAlD;AAA+DC,IAAAA,QAAQ,GAAG;AAA1E,GAAmF;;AACpH,QAAMC,UAAU,GAAG,MAAMD,QAAQ,IAAIJ,OAAO,CAACM,OAAR,CAAgBC,QAA5B,IAAwC,CAACP,OAAO,CAACM,OAAR,CAAgBP,OAAhB,CAAlE;;AACA,QAAMS,aAAa,GAAG,MAAMH,UAAU,KAAK,iBAAL,GAAyB,EAA/D;;AACA,QAAM,GAAGI,OAAH,IAAchB,QAAQ,CAAC,CAAC,CAAF,CAA5B;;AACA,QAAMiB,UAAU,GAAIC,CAAD,IAAO;AACtBX,IAAAA,OAAO,CAACM,OAAR,CAAgBP,OAAhB,IAA2BY,CAAC,CAACC,aAAF,CAAgBC,KAA3C;AACAJ,IAAAA,OAAO,CAACK,IAAI,CAACC,GAAL,EAAD,CAAP;AACH,GAHD;;AAIA,sBACI;AAAK,IAAA,SAAS,EAAG,GAAEjB,UAAW,GAAEO,UAAU,KAAK,WAAL,GAAmB,EAAG,EAAhE;AAAA,4BACI;AAAO,MAAA,SAAS,EAAG,qBAAoBD,QAAQ,GAAG,WAAH,GAAiB,EAAG,EAAnE;AAAA,gBAAuEF;AAAvE;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,QAAQ,EAAE,CAAC,CAACE,QAA/B;AAAyC,MAAA,SAAS,EAAG,uEAAsEI,aAAa,EAAG,EAA3I;AAA8I,MAAA,WAAW,EAAEL,WAA3J;AAAwK,MAAA,KAAK,EAAEH,OAAO,CAACM,OAAR,CAAgBP,OAAhB,CAA/K;AAAyM,MAAA,QAAQ,EAAEY,CAAC,IAAID,UAAU,CAACC,CAAD;AAAlO;AAAA;AAAA;AAAA;AAAA,YAFJ,EAGKN,UAAU,mBAAM;AAAK,MAAA,SAAS,EAAC,2DAAf;AAAA,gBAA4ED;AAA5E;AAAA;AAAA;AAAA;AAAA,YAHrB;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CAfwB,kCAAH,iCAAf;MAAMR,S;AAiBb,OAAO,MAAMoB,UAAU,kCAAGzB,KAAK,CAACM,IAAN,WAAW,SAAwH;AAAA;;AAAA,MAAvH;AAAEC,IAAAA,UAAF;AAAcC,IAAAA,OAAd;AAAuBC,IAAAA,OAAvB;AAAgCC,IAAAA,SAAhC;AAA2CC,IAAAA,KAA3C;AAAkDC,IAAAA,WAAlD;AAA+DC,IAAAA,QAAQ,GAAG,EAA1E;AAA8Ea,IAAAA,QAAQ,GAAG,KAAzF;AAAgGC,IAAAA,QAAQ,GAAG;AAA3G,GAAuH;AACzJ,QAAMC,OAAO,GAAG3B,MAAM,CAAC,IAAI4B,MAAJ,CAAW,+BAAX,CAAD,CAAtB;;AACA,QAAMf,UAAU,GAAG,MAAMD,QAAQ,IAAIJ,OAAO,CAACM,OAAR,CAAgBC,QAA5B,KAAyC,CAACP,OAAO,CAACM,OAAR,CAAgBP,OAAhB,CAAD,IAA6B,CAACoB,OAAO,CAACb,OAAR,CAAgBe,IAAhB,CAAqBrB,OAAO,CAACM,OAAR,CAAgBP,OAAhB,CAArB,CAAvE,CAAzB;;AACA,QAAMS,aAAa,GAAG,MAAMH,UAAU,KAAK,iBAAL,GAA0B,GAAEa,QAAQ,GAAG,cAAH,GAAoB,EAAG,EAAjG;;AACA,QAAMI,QAAQ,GAAG,MAAM,CAACtB,OAAO,CAACM,OAAR,CAAgBP,OAAhB,CAAD,GAA4B,CAA5B,GAAgC,CAACoB,OAAO,CAACb,OAAR,CAAgBe,IAAhB,CAAqBrB,OAAO,CAACM,OAAR,CAAgBP,OAAhB,CAArB,CAAD,GAAkD,CAAlD,GAAsD,CAA7G;;AACA,QAAM,GAAGU,OAAH,IAAchB,QAAQ,CAAC,CAAC,CAAF,CAA5B;;AACA,QAAMiB,UAAU,GAAIC,CAAD,IAAO;AACtBX,IAAAA,OAAO,CAACM,OAAR,CAAgBP,OAAhB,IAA2BY,CAAC,CAACC,aAAF,CAAgBC,KAA3C;AACAJ,IAAAA,OAAO,CAACK,IAAI,CAACC,GAAL,EAAD,CAAP;AACH,GAHD;;AAIA,sBAEI;AAAK,IAAA,SAAS,EAAG,GAAEjB,UAAW,GAAEO,UAAU,KAAK,WAAL,GAAmB,EAAG,EAAhE;AAAA,4BACI;AAAO,MAAA,SAAS,EAAG,qBAAoBD,QAAQ,GAAG,WAAH,GAAiB,EAAG,EAAnE;AAAA,gBAAuEF;AAAvE;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,QAAQ,EAAE,CAAC,CAACE,QAA/B;AAAyC,MAAA,SAAS,EAAG,sEAAqEI,aAAa,EAAG,EAA1I;AAA6I,MAAA,WAAW,EAAEL,WAA1J;AAAuK,MAAA,KAAK,EAAEH,OAAO,CAACM,OAAR,CAAgBP,OAAhB,CAA9K;AAAwM,MAAA,QAAQ,EAAEY,CAAC,IAAID,UAAU,CAACC,CAAD,CAAjO;AAAsO,MAAA,QAAQ,EAAEM,QAAhP;AAA0P,MAAA,QAAQ,EAAEC;AAApQ;AAAA;AAAA;AAAA;AAAA,YAFJ,EAGKb,UAAU,mBAAM;AAAK,MAAA,SAAS,EAAC,2DAAf;AAAA,gBAA4EiB,QAAQ,OAAO,CAAf,GAAmBlB,QAAnB,GAA8B;AAA1G;AAAA;AAAA;AAAA;AAAA,YAHrB;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AAQH,CAlByB,kCAAH,iCAAhB;MAAMY,U;AAoBb,OAAO,MAAMO,UAAU,kCAAGhC,KAAK,CAACM,IAAN,WAAW,SAAiH;AAAA;;AAAA,MAAhH;AAAEC,IAAAA,UAAU,GAAG,EAAf;AAAmBC,IAAAA,OAAnB;AAA4BC,IAAAA,OAA5B;AAAqCwB,IAAAA,EAArC;AAAyCC,IAAAA,IAAzC;AAA+CvB,IAAAA,KAA/C;AAAsDwB,IAAAA,MAAM,GAAG,EAA/D;AAAmEC,IAAAA,KAAK,GAAG,EAA3E;AAA+EvB,IAAAA,QAAQ,GAAG,EAA1F;AAA8FwB,IAAAA,MAAM,GAAG;AAAvG,GAAgH;;AAClJ,QAAMvB,UAAU,GAAG,MAAMD,QAAQ,IAAIJ,OAAO,CAACM,OAAR,CAAgBC,QAA5B,IAAwC,CAACP,OAAO,CAACM,OAAR,CAAgBP,OAAhB,CAAlE;;AACA,QAAMS,aAAa,GAAG,MAAMH,UAAU,KAAK,gBAAL,GAAwB,iBAA9D;;AACA,QAAM,GAAGI,OAAH,IAAchB,QAAQ,CAAC,CAAC,CAAF,CAA5B;;AACA,QAAMiB,UAAU,GAAIC,CAAD,IAAO;AACtBX,IAAAA,OAAO,CAACM,OAAR,CAAgBP,OAAhB,IAA2BY,CAAC,CAACC,aAAF,CAAgBC,KAA3C;AACAJ,IAAAA,OAAO,CAACK,IAAI,CAACC,GAAL,EAAD,CAAP;AACH,GAHD;;AAIA,sBAEI;AAAK,IAAA,SAAS,EAAG,GAAEjB,UAAW,GAAEO,UAAU,KAAK,WAAL,GAAmB,EAAG,EAAhE;AAAA,4BACI;AAAO,MAAA,SAAS,EAAC,6BAAjB;AAAA,gBAAgDH;AAAhD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,gBACKwB,MAAM,CAACG,GAAP,CAAW,CAACC,CAAD,EAAIC,CAAJ,kBACR;AAAe,QAAA,SAAS,EAAG,2BAA0BA,CAAC,GAAG,CAAJ,GAAQ,OAAR,GAAkB,EAAG,EAA1E;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA,iCACI;AAAA,oCACI;AACI,cAAA,IAAI,EAAC,OADT;AAEI,cAAA,KAAK,EAAC,MAFV;AAGI,cAAA,OAAO,EAAE,KAAKC,KAAL,CAAWC,cAAX,KAA8B,MAH3C;AAII,cAAA,QAAQ,EAAE,KAAKC;AAJnB;AAAA;AAAA;AAAA;AAAA,oBADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAYI;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA,iCACI;AAAA,oCACI;AACI,cAAA,IAAI,EAAC,OADT;AAEI,cAAA,KAAK,EAAC,QAFV;AAGI,cAAA,OAAO,EAAE,KAAKF,KAAL,CAAWC,cAAX,KAA8B,QAH3C;AAII,cAAA,QAAQ,EAAE,KAAKC;AAJnB;AAAA;AAAA;AAAA;AAAA,oBADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAZJ,eAuBI;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA,iCACI;AAAA,oCACI;AACI,cAAA,IAAI,EAAC,OADT;AAEI,cAAA,KAAK,EAAC,OAFV;AAGI,cAAA,OAAO,EAAE,KAAKF,KAAL,CAAWC,cAAX,KAA8B,OAH3C;AAII,cAAA,QAAQ,EAAE,KAAKC;AAJnB;AAAA;AAAA;AAAA;AAAA,oBADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAvBJ,eAkCI;AAAA,8CAC0B,KAAKF,KAAL,CAAWC,cADrC;AAAA;AAAA;AAAA;AAAA;AAAA,gBAlCJ,eAqCI;AACI,UAAA,IAAI,EAAC,OADT;AAEI,UAAA,SAAS,EAAG,gBAAezB,aAAa,EAAG,4HAF/C;AAGI,UAAA,IAAI,EAAEiB,IAHV;AAII,UAAA,KAAK,EAAEK,CAJX;AAKI,UAAA,cAAc,EAAE9B,OAAO,CAACM,OAAR,CAAgBP,OAAhB,MAA6B+B,CALjD;AAMI,UAAA,QAAQ,EAAEnB,CAAC,IAAID,UAAU,CAACC,CAAD;AAN7B;AAAA;AAAA;AAAA;AAAA,gBArCJ,eA6CI;AAAM,UAAA,SAAS,EAAC,oBAAhB;AAAA,qBACKgB,KAAK,CAACI,CAAD,CAAL,iBAAY,QAAC,eAAD;AAAiB,YAAA,IAAI,EAAEJ,KAAK,CAACI,CAAD,CAA5B;AAAiC,YAAA,SAAS,EAAC,eAA3C;AAA2D,YAAA,KAAK,EAAE;AAAEI,cAAAA,KAAK,EAAEnC,OAAO,CAACM,OAAR,CAAgBP,OAAhB,MAA6B+B,CAA7B,GAAiCF,MAAM,CAACG,CAAD,CAAN,IAAa,eAA9C,GAAgE;AAAzE;AAAlE;AAAA;AAAA;AAAA;AAAA,kBADjB,eAEI;AAAA,sBAAOD;AAAP;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBA7CJ;AAAA,SAAYC,CAAZ;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YAFJ,EAwDK1B,UAAU,mBAAM;AAAK,MAAA,SAAS,EAAC,2DAAf;AAAA,gBAA4ED;AAA5E;AAAA;AAAA;AAAA;AAAA,YAxDrB;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AA6DH,CArEyB,kCAAH,iCAAhB;MAAMmB,U;AAuEb,OAAO,MAAMa,WAAW,kCAAG7C,KAAK,CAACM,IAAN,WAAW,SAA0H;AAAA;;AAAA,MAAzH;AAAEC,IAAAA,UAAF;AAAcC,IAAAA,OAAd;AAAuBC,IAAAA,OAAvB;AAAgCwB,IAAAA,EAAhC;AAAoCtB,IAAAA,KAApC;AAA2CmC,IAAAA,OAAO,GAAG,EAArD;AAAyDC,IAAAA,QAAQ,GAAG,IAApE;AAA0EnC,IAAAA,WAAW,GAAG,EAAxF;AAA4FC,IAAAA,QAAQ,GAAG,EAAvG;AAA2GmC,IAAAA,EAAE,GAAG;AAAhH,GAAyH;;AAC5J,QAAMlC,UAAU,GAAG,MAAMD,QAAQ,IAAIJ,OAAO,CAACM,OAAR,CAAgBC,QAA5B,IAAwC,CAACP,OAAO,CAACM,OAAR,CAAgBP,OAAhB,CAAlE;;AACA,QAAMS,aAAa,GAAG,MAAMH,UAAU,KAAK,gBAAL,GAAwB,iBAA9D;;AACA,QAAM,GAAGI,OAAH,IAAchB,QAAQ,CAAC,CAAC,CAAF,CAA5B;;AACA,QAAMiB,UAAU,GAAIC,CAAD,IAAO;AACtBX,IAAAA,OAAO,CAACM,OAAR,CAAgBP,OAAhB,IAA2BY,CAAC,CAACC,aAAF,CAAgBC,KAA3C;AACA,QAAIyB,QAAJ,EAAcA,QAAQ,GAAtB,KACK7B,OAAO,CAACK,IAAI,CAACC,GAAL,EAAD,CAAP;AACR,GAJD;;AAKA,sBACI;AAAK,IAAA,SAAS,EAAG,GAAEjB,UAAW,GAAEO,UAAU,KAAK,WAAL,GAAmB,EAAG,EAAhE;AAAA,4BACI;AAAO,MAAA,SAAS,EAAC,6BAAjB;AAAA,gBAAgDH;AAAhD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAQ,MAAA,SAAS,EAAG,UAASM,aAAa,EAAG,sEAA7C;AAAoH,MAAA,YAAY,EAAER,OAAO,CAACM,OAAR,CAAgBP,OAAhB,CAAlI;AAA4J,MAAA,QAAQ,EAAEY,CAAC,IAAID,UAAU,CAACC,CAAD,CAArL;AAA0L,MAAA,EAAE,EAAE4B,EAA9L;AAAA,8BACI;AAAQ,QAAA,KAAK,EAAC,EAAd;AAAA,kBAAkBpC;AAAlB;AAAA;AAAA;AAAA;AAAA,cADJ,EAEKkC,OAAO,CAACR,GAAR,CAAY,CAACW,GAAD,EAAMC,GAAN,kBAAc;AAAkB,QAAA,KAAK,EAAED,GAAG,CAACE,GAAJ,IAAWF,GAApC;AAAA,kBAA0CA,GAAG,CAACf,IAAJ,IAAYe;AAAtD,SAAaC,GAAb;AAAA;AAAA;AAAA;AAAA,cAA1B,CAFL;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,EAMKpC,UAAU,mBAAM;AAAK,MAAA,SAAS,EAAC,2DAAf;AAAA,gBAA4ED;AAA5E;AAAA;AAAA;AAAA;AAAA,YANrB;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CAnB0B,kCAAH,iCAAjB;MAAMgC,W;AAqBb,OAAO,MAAMO,UAAU,kCAAGpD,KAAK,CAACM,IAAN,WAAW,SAAkH;AAAA;;AAAA,MAAjH;AAAEC,IAAAA,UAAF;AAAcC,IAAAA,OAAd;AAAuBC,IAAAA,OAAvB;AAAgCwB,IAAAA,EAAhC;AAAoCtB,IAAAA,KAApC;AAA2CoC,IAAAA,QAAQ,GAAG,IAAtD;AAA4DM,IAAAA,IAA5D;AAAkEzC,IAAAA,WAAW,GAAG,EAAhF;AAAoFC,IAAAA,QAAQ,GAAG,EAA/F;AAAmGmC,IAAAA,EAAE,GAAG;AAAxG,GAAiH;;AACnJ,QAAMlC,UAAU,GAAG,MAAMD,QAAQ,IAAIJ,OAAO,CAACM,OAAR,CAAgBC,QAA5B,IAAwC,CAACP,OAAO,CAACM,OAAR,CAAgBP,OAAhB,CAAlE;;AACA,QAAMS,aAAa,GAAG,MAAMH,UAAU,KAAK,gBAAL,GAAwB,iBAA9D;;AACA,QAAM,GAAGI,OAAH,IAAchB,QAAQ,CAAC,CAAC,CAAF,CAA5B;;AACA,QAAMiB,UAAU,GAAIC,CAAD,IAAO;AACtBX,IAAAA,OAAO,CAACM,OAAR,CAAgBP,OAAhB,IAA2BY,CAAC,CAACC,aAAF,CAAgBC,KAA3C;AACA,QAAIyB,QAAJ,EAAcA,QAAQ,GAAtB,KACK7B,OAAO,CAACK,IAAI,CAACC,GAAL,EAAD,CAAP;AACR,GAJD;;AAKA,sBACI;AAAK,IAAA,SAAS,EAAG,GAAEjB,UAAW,GAAEO,UAAU,KAAK,WAAL,GAAmB,EAAG,EAAhE;AAAA,4BACI;AAAO,MAAA,SAAS,EAAC,6BAAjB;AAAA,gBAAgDH;AAAhD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACI;AACI,QAAA,SAAS,EAAG,gJAA+IM,aAAa,EAAG,gEAD/K;AAAA,kBAEER,OAAO,CAACM,OAAR,CAAgBsC,IAAhB,KAAyB;AAF3B;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,SAAS,EAAG,qFAAoFpC,aAAa,EAAG,8NAFpH;AAGI,QAAA,WAAW,EAAEL,WAHjB;AAII,QAAA,KAAK,EAAEH,OAAO,CAACM,OAAR,CAAgBP,OAAhB,CAJX;AAKI,QAAA,QAAQ,EAAEY,CAAC,IAAID,UAAU,CAACC,CAAD;AAL7B;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,EAcKN,UAAU,mBAAM;AAAK,MAAA,SAAS,EAAC,2DAAf;AAAA,gBAA4ED;AAA5E;AAAA;AAAA;AAAA;AAAA,YAdrB;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBH,CA3ByB,kCAAH,iCAAhB;OAAMuC,U;AA6Bb,OAAO,MAAME,QAAQ,kCAAGtD,KAAK,CAACM,IAAN,YAAW,SAAkH;AAAA;;AAAA,MAAjH;AAAEC,IAAAA,UAAF;AAAcC,IAAAA,OAAd;AAAuBC,IAAAA,OAAvB;AAAgCwB,IAAAA,EAAhC;AAAoCtB,IAAAA,KAApC;AAA2CoC,IAAAA,QAAQ,GAAG,IAAtD;AAA4DM,IAAAA,IAA5D;AAAkEzC,IAAAA,WAAW,GAAG,EAAhF;AAAoFC,IAAAA,QAAQ,GAAG,EAA/F;AAAmGmC,IAAAA,EAAE,GAAG;AAAxG,GAAiH;;AACjJ,QAAMlC,UAAU,GAAG,MAAMD,QAAQ,IAAIJ,OAAO,CAACM,OAAR,CAAgBC,QAA5B,IAAwC,CAACP,OAAO,CAACM,OAAR,CAAgBP,OAAhB,CAAlE;;AACA,QAAMS,aAAa,GAAG,MAAMH,UAAU,KAAK,gBAAL,GAAwB,iBAA9D;;AACA,QAAM,GAAGI,OAAH,IAAchB,QAAQ,CAAC,CAAC,CAAF,CAA5B;;AACA,QAAMiB,UAAU,GAAIoC,IAAD,IAAU;AACzB9C,IAAAA,OAAO,CAACM,OAAR,CAAgBP,OAAhB,IAA2B+C,IAA3B;AACA,QAAIR,QAAJ,EAAcA,QAAQ,GAAtB,KACK7B,OAAO,CAACK,IAAI,CAACC,GAAL,EAAD,CAAP;AACR,GAJD;;AAKA,sBACI;AAAK,IAAA,SAAS,EAAG,GAAEjB,UAAW,GAAEO,UAAU,KAAK,WAAL,GAAmB,EAAG,EAAhE;AAAA,4BACI;AAAO,MAAA,SAAS,EAAC,6BAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,eAAD;AAAiB,MAAA,QAAQ,EAAEL,OAAO,CAACM,OAAR,CAAgBP,OAAhB,CAA3B;AAAqD,MAAA,QAAQ,EAAE+C,IAAI,IAAIpC,UAAU,CAACoC,IAAD,CAAjF;AAAyF,MAAA,eAAe,EAAE3C,WAA1G;AAAuH,MAAA,SAAS,EAAG,UAASK,aAAa,EAAG,sEAA5J;AAAmO,MAAA,UAAU,EAAE;AAA/O;AAAA;AAAA;AAAA;AAAA,YAFJ,EAGKH,UAAU,mBAAM;AAAK,MAAA,SAAS,EAAC,2DAAf;AAAA,gBAA4ED;AAA5E;AAAA;AAAA;AAAA;AAAA,YAHrB;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CAhBuB,kCAAH,iCAAd;OAAMyC,Q;AAkBb,OAAO,MAAME,aAAa,kCAAGxD,KAAK,CAACM,IAAN,YAAW,SAAmD;AAAA;;AAAA,MAAlD;AAAEC,IAAAA,UAAF;AAAcC,IAAAA,OAAd;AAAuBC,IAAAA,OAAvB;AAAgCwB,IAAAA,EAAhC;AAAoCe,IAAAA,EAAE,GAAG;AAAzC,GAAkD;;AACvF,QAAMlC,UAAU,GAAG,MAAML,OAAO,CAACM,OAAR,CAAgBC,QAAhB,IAA4B,CAACP,OAAO,CAACM,OAAR,CAAgBP,OAAhB,CAAtD;;AACA,QAAMS,aAAa,GAAG,MAAM;AACxB,WAAOH,UAAU,KAAK,gBAAL,GAAyBL,OAAO,CAACM,OAAR,CAAgBC,QAAhB,IAA4ByC,IAAI,IAAI,CAApC,IAAyCA,IAAI,GAAG,CAAjD,GAAsD,gBAAtD,GAAyE,iBAAlH;AACH,GAFD;;AAGA,QAAM,CAACA,IAAD,EAAOC,OAAP,IAAkBxD,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,GAAGgB,OAAH,IAAchB,QAAQ,CAAC,CAAC,CAAF,CAA5B;;AACA,QAAMiB,UAAU,GAAIC,CAAD,IAAO;AACtBX,IAAAA,OAAO,CAACM,OAAR,CAAgBP,OAAhB,IAA2BY,CAAC,CAACC,aAAF,CAAgBC,KAA3C;AACAJ,IAAAA,OAAO,CAACK,IAAI,CAACC,GAAL,EAAD,CAAP;AACH,GAHD;;AAIA,QAAMmC,MAAM,GAAIvC,CAAD,IAAO;AAClBX,IAAAA,OAAO,CAACM,OAAR,CAAiB,GAAEP,OAAQ,KAA3B,IAAmCY,CAAC,CAACC,aAAF,CAAgBC,KAAnD;AACAJ,IAAAA,OAAO,CAACK,IAAI,CAACC,GAAL,EAAD,CAAP;AACH,GAHD;;AAIA,QAAMoC,SAAS,GAAG,CAACC,KAAD,EAAQJ,IAAR,KAAiB;AAC/BC,IAAAA,OAAO,CAACG,KAAD,CAAP;AACH,GAFD;;AAGA,QAAMC,WAAW,GAAG,MAAM;AACtB,WAAQrD,OAAO,CAACM,OAAR,CAAgBP,OAAhB,MAA6BC,OAAO,CAACM,OAAR,CAAiB,GAAEP,OAAQ,KAA3B,CAArC;AACH,GAFD;;AAGA,sBACI;AAAA,2BACI;AAAK,MAAA,SAAS,EAAG,gBAAgBM,UAAU,MAAOL,OAAO,CAACM,OAAR,CAAgBC,QAAhB,IAA4ByC,IAAI,IAAI,CAApC,IAAyCA,IAAI,GAAG,CAAlE,GAAwE,WAAxE,GAAsF,EAAG,GAAEhD,OAAO,CAACM,OAAR,CAAgBP,OAAhB,EAAyBuD,MAAzB,GAAkC,EAAlC,GAAuC,OAAQ,EAA1K;AAAA,6BACI;AAAK,QAAA,KAAK,EAAC,eAAX;AAAA,gCACI;AAAK,UAAA,KAAK,EAAC,YAAX;AAAA,kCACI;AAAO,YAAA,SAAS,EAAC,6BAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AACI,YAAA,IAAI,EAAC,UADT;AAEI,YAAA,SAAS,EAAG,UAAS9C,aAAa,EAAG,2FAFzC;AAGI,YAAA,WAAW,EAAC,UAHhB;AAII,YAAA,KAAK,EAAER,OAAO,CAACM,OAAR,CAAgBP,OAAhB,CAJX;AAKI,YAAA,QAAQ,EAAEwD,GAAG,IAAI7C,UAAU,CAAC6C,GAAD;AAL/B;AAAA;AAAA;AAAA;AAAA,kBAFJ,EASKlD,UAAU,mBAAM;AAAK,YAAA,SAAS,EAAC,2DAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBATrB,EAUKL,OAAO,CAACM,OAAR,CAAgBP,OAAhB,EAAyBuD,MAAzB,GAAkC,CAAlC,iBAAuC,QAAC,mBAAD;AAAqB,YAAA,QAAQ,EAAEtD,OAAO,CAACM,OAAR,CAAgBP,OAAhB,CAA/B;AAAyD,YAAA,SAAS,EAAC,MAAnE;AAA0E,YAAA,aAAa,EAAE,CAACqD,KAAD,EAAQJ,IAAR,KAAiBG,SAAS,CAACC,KAAD,EAAQJ,IAAR;AAAnH;AAAA;AAAA;AAAA;AAAA,kBAV5C;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,+BAcI;AAAK,UAAA,KAAK,EAAC,YAAX;AAAA,kCACI;AAAO,YAAA,SAAS,EAAC,6BAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AACI,YAAA,IAAI,EAAC,UADT;AAEI,YAAA,SAAS,EAAG,UAASK,WAAW,KAAK,gBAAL,GAAwB,iBAAkB,2FAF9E;AAGI,YAAA,WAAW,EAAC,kBAHhB;AAII,YAAA,KAAK,EAAErD,OAAO,CAACM,OAAR,CAAiB,GAAEP,OAAQ,KAA3B,CAJX;AAKI,YAAA,QAAQ,EAAEY,CAAC,IAAIuC,MAAM,CAACvC,CAAD;AALzB;AAAA;AAAA;AAAA;AAAA,kBAFJ,EASK0C,WAAW,mBAAM;AAAK,YAAA,SAAS,EAAC,2DAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBATtB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAdJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAgCH,CArD4B,kCAAH,iCAAnB;OAAMN,a","sourcesContent":["import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { useRef, useState } from 'react';\r\nimport ReactDatePicker from \"react-datepicker\";\r\n//import PasswordStrengthBar from 'react-password-strength-bar';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport PasswordStrengthBar from 'react-password-strength-bar';\r\n\r\nexport const InputText = React.memo(({ styleClass, formKey, formRef, uiRefresh, label, placeholder, required = \"\" }) => {\r\n    const isNotValid = () => required && formRef.current.isSubmit && !formRef.current[formKey];\r\n    const inValidBorder = () => isNotValid() ? ' border-red-500' : '';\r\n    const [, refresh] = useState(-1);\r\n    const setFormVal = (e) => {\r\n        formRef.current[formKey] = e.currentTarget.value;\r\n        refresh(Date.now());\r\n    }\r\n    return (\r\n        <div className={`${styleClass}${isNotValid() ? ' mark-err' : ''}`}>\r\n            <label className={`text-gray-600 mb-1${required ? ' required' : ''}`}>{label}</label>\r\n            <input type=\"text\" required={!!required} className={`w-full p-1  border border-slate-300 hover:border-red-800 ... rounded${inValidBorder()}`} placeholder={placeholder} value={formRef.current[formKey]} onChange={e => setFormVal(e)} />\r\n            {isNotValid() && <div className='flex justify-start items-center text-red-500 text-xs mt-1'>{required}</div>}\r\n        </div>\r\n    );\r\n});\r\n\r\nexport const InputEmail = React.memo(({ styleClass, formKey, formRef, uiRefresh, label, placeholder, required = \"\", readonly = false, disabled = false }) => {\r\n    const isEmail = useRef(new RegExp('[a-z0-9]+@[a-z]+\\\\.[a-z]{2,3}'))\r\n    const isNotValid = () => required && formRef.current.isSubmit && (!formRef.current[formKey] || !isEmail.current.test(formRef.current[formKey]));\r\n    const inValidBorder = () => isNotValid() ? ' border-red-500' : `${disabled ? ' bg-gray-200' : ''}`;\r\n    const errorNum = () => !formRef.current[formKey] ? 1 : !isEmail.current.test(formRef.current[formKey]) ? 2 : 0;\r\n    const [, refresh] = useState(-1);\r\n    const setFormVal = (e) => {\r\n        formRef.current[formKey] = e.currentTarget.value;\r\n        refresh(Date.now());\r\n    }\r\n    return (\r\n\r\n        <div className={`${styleClass}${isNotValid() ? ' mark-err' : ''}`}>\r\n            <label className={`text-gray-600 mb-1${required ? ' required' : ''}`}>{label}</label>\r\n            <input type=\"text\" required={!!required} className={`w-full p-1 border border-slate-300 hover:border-red-800 ... rounded${inValidBorder()}`} placeholder={placeholder} value={formRef.current[formKey]} onChange={e => setFormVal(e)} readOnly={readonly} disabled={disabled} />\r\n            {isNotValid() && <div className='flex justify-start items-center text-red-500 text-xs mt-1'>{errorNum() === 1 ? required : 'Invalid email address'}</div>}\r\n        </div>\r\n    );\r\n});\r\n\r\nexport const InputRadio = React.memo(({ styleClass = \"\", formKey, formRef, ui, name, label, values = [], icons = [], required = \"\", colors = [] }) => {\r\n    const isNotValid = () => required && formRef.current.isSubmit && !formRef.current[formKey];\r\n    const inValidBorder = () => isNotValid() ? 'border-red-500' : 'border-gray-400';\r\n    const [, refresh] = useState(-1);\r\n    const setFormVal = (e) => {\r\n        formRef.current[formKey] = e.currentTarget.value;\r\n        refresh(Date.now());\r\n    }\r\n    return (\r\n\r\n        <div className={`${styleClass}${isNotValid() ? ' mark-err' : ''}`}>\r\n            <label className=\"text-gray-600 mb-1 required\">{label}</label>\r\n            <div className=\"flex\">\r\n                {values.map((r, i) => (\r\n                    <label key={i} className={`inline-flex items-center${i > 0 ? ' ml-5' : ''}`}>\r\n                        <div className=\"radio\">\r\n                            <label>\r\n                                <input\r\n                                    type=\"radio\"\r\n                                    value=\"Male\"\r\n                                    checked={this.state.selectedOption === \"Male\"}\r\n                                    onChange={this.onValueChange}\r\n                                />\r\n                                Male\r\n                            </label>\r\n                        </div>\r\n                        <div className=\"radio\">\r\n                            <label>\r\n                                <input\r\n                                    type=\"radio\"\r\n                                    value=\"Female\"\r\n                                    checked={this.state.selectedOption === \"Female\"}\r\n                                    onChange={this.onValueChange}\r\n                                />\r\n                                Female\r\n                            </label>\r\n                        </div>\r\n                        <div className=\"radio\">\r\n                            <label>\r\n                                <input\r\n                                    type=\"radio\"\r\n                                    value=\"Other\"\r\n                                    checked={this.state.selectedOption === \"Other\"}\r\n                                    onChange={this.onValueChange}\r\n                                />\r\n                                Other\r\n                            </label>\r\n                        </div>\r\n                        <div>\r\n                            Selected option is : {this.state.selectedOption}\r\n                        </div>\r\n                        <input\r\n                            type=\"radio\"\r\n                            className={`rounded-full ${inValidBorder()}  text-blue-400 shadow-sm focus:border-blue-700 focus:ring focus:ring-offset-0 focus:ring-indigo-200 focus:ring-opacity-50`}\r\n                            name={name}\r\n                            value={r}\r\n                            defaultChecked={formRef.current[formKey] === r}\r\n                            onChange={e => setFormVal(e)}\r\n                        />\r\n                        <span className=\"ml-2 text-gray-600\">\r\n                            {icons[i] && <FontAwesomeIcon icon={icons[i]} className=\"text-2xl mr-1\" style={{ color: formRef.current[formKey] === r ? colors[i] || 'rgb(75 85 99)' : 'rgb(75 85 99)' }} />}\r\n                            <span>{r}</span>\r\n                        </span>\r\n                    </label>\r\n                ))}\r\n            </div>\r\n            {isNotValid() && <div className='flex justify-start items-center text-red-500 text-xs mt-1'>{required}</div>}\r\n        </div>\r\n    );\r\n});\r\n\r\nexport const InputSelect = React.memo(({ styleClass, formKey, formRef, ui, label, options = [], callback = null, placeholder = \"\", required = \"\", ID = \"\" }) => {\r\n    const isNotValid = () => required && formRef.current.isSubmit && !formRef.current[formKey];\r\n    const inValidBorder = () => isNotValid() ? 'border-red-500' : 'border-gray-400';\r\n    const [, refresh] = useState(-1);\r\n    const setFormVal = (e) => {\r\n        formRef.current[formKey] = e.currentTarget.value;\r\n        if (callback) callback();\r\n        else refresh(Date.now());\r\n    }\r\n    return (\r\n        <div className={`${styleClass}${isNotValid() ? ' mark-err' : ''}`}>\r\n            <label className=\"text-gray-600 mb-1 required\">{label}</label>\r\n            <select className={`border ${inValidBorder()} w-full p-1 border border-slate-300 hover:border-red-800 ... rounded`} defaultValue={formRef.current[formKey]} onChange={e => setFormVal(e)} id={ID}>\r\n                <option value=\"\">{placeholder}</option>\r\n                {options.map((itm, idx) => <option key={idx} value={itm.key || itm}>{itm.name || itm}</option>)}\r\n            </select>\r\n            {isNotValid() && <div className='flex justify-start items-center text-red-500 text-xs mt-1'>{required}</div>}\r\n        </div>\r\n    );\r\n});\r\n\r\nexport const InputPhone = React.memo(({ styleClass, formKey, formRef, ui, label, callback = null, code, placeholder = \"\", required = \"\", ID = \"\" }) => {\r\n    const isNotValid = () => required && formRef.current.isSubmit && !formRef.current[formKey];\r\n    const inValidBorder = () => isNotValid() ? 'border-red-500' : 'border-gray-400';\r\n    const [, refresh] = useState(-1);\r\n    const setFormVal = (e) => {\r\n        formRef.current[formKey] = e.currentTarget.value;\r\n        if (callback) callback();\r\n        else refresh(Date.now());\r\n    }\r\n    return (\r\n        <div className={`${styleClass}${isNotValid() ? ' mark-err' : ''}`}>\r\n            <label className=\"text-gray-600 mb-1 required\">{label}</label>\r\n            <div className=\"flex\">\r\n                <span\r\n                    className={`inline-flex items-center justify-center px-3 text-sm text-gray-900 bg-gray-200 rounded-l-md border border-slate-300 hover:border-red-800 ... ${inValidBorder()} dark:bg-gray-600 dark:text-gray-400 dark:border-gray-600 w-12`}\r\n                >{formRef.current[code] || '-'}</span>\r\n                <input\r\n                    type=\"text\"\r\n                    className={`rounded-none rounded-r-lg border border-slate-300 hover:border-red-800 ... border ${inValidBorder()} text-gray-900 focus:ring-blue-500 focus:border-blue-500 block flex-1 min-w-0 w-full p-1 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500`}\r\n                    placeholder={placeholder}\r\n                    value={formRef.current[formKey]}\r\n                    onChange={e => setFormVal(e)}\r\n                />\r\n            </div>\r\n            {isNotValid() && <div className='flex justify-start items-center text-red-500 text-xs mt-1'>{required}</div>}\r\n        </div>\r\n    );\r\n});\r\n\r\nexport const InputDOB = React.memo(({ styleClass, formKey, formRef, ui, label, callback = null, code, placeholder = \"\", required = \"\", ID = \"\" }) => {\r\n    const isNotValid = () => required && formRef.current.isSubmit && !formRef.current[formKey];\r\n    const inValidBorder = () => isNotValid() ? 'border-red-500' : 'border-gray-400';\r\n    const [, refresh] = useState(-1);\r\n    const setFormVal = (date) => {\r\n        formRef.current[formKey] = date;\r\n        if (callback) callback();\r\n        else refresh(Date.now());\r\n    }\r\n    return (\r\n        <div className={`${styleClass}${isNotValid() ? ' mark-err' : ''}`}>\r\n            <label className=\"text-gray-600 mb-1 required\">DOB</label>\r\n            <ReactDatePicker selected={formRef.current[formKey]} onChange={date => setFormVal(date)} placeholderText={placeholder} className={`border ${inValidBorder()} w-full p-1 border border-slate-300 hover:border-red-800 ... rounded`} dateFormat={'MMM/dd/yyyy'} />\r\n            {isNotValid() && <div className='flex justify-start items-center text-red-500 text-xs mt-1'>{required}</div>}\r\n        </div>\r\n    );\r\n});\r\n\r\nexport const PasswordCheck = React.memo(({ styleClass, formKey, formRef, ui, ID = \"\" }) => {\r\n    const isNotValid = () => formRef.current.isSubmit && !formRef.current[formKey];\r\n    const inValidBorder = () => {\r\n        return isNotValid() ? 'border-red-500' : (formRef.current.isSubmit && feed >= 0 && feed < 2) ? 'border-red-500' : 'border-gray-400';\r\n    }\r\n    const [feed, setFeed] = useState(0);\r\n    const [, refresh] = useState(-1);\r\n    const setFormVal = (e) => {\r\n        formRef.current[formKey] = e.currentTarget.value;\r\n        refresh(Date.now());\r\n    }\r\n    const rePass = (e) => {\r\n        formRef.current[`${formKey}_re`] = e.currentTarget.value;\r\n        refresh(Date.now());\r\n    }\r\n    const scoreFeed = (score, feed) => {\r\n        setFeed(score);\r\n    }\r\n    const comparePass = () => {\r\n        return (formRef.current[formKey] !== formRef.current[`${formKey}_re`]);\r\n    }\r\n    return (\r\n        <>\r\n            <div className={`flex flex-col${(isNotValid() || (formRef.current.isSubmit && feed >= 0 && feed < 2)) ? ' mark-err' : ''}${formRef.current[formKey].length ? '' : ' mb-4'}`}>\r\n                <div class=\"flex flex-row\">\r\n                    <div class=\"w-1/2 ... \">\r\n                        <label className=\"text-gray-600 mb-1 required\">Password</label>\r\n                        <input\r\n                            type=\"password\"\r\n                            className={`border ${inValidBorder()} w-full p-1 border border-slate-300 hover:border-red-800 ... rounded focus:border-dodge-b`}\r\n                            placeholder=\"Password\"\r\n                            value={formRef.current[formKey]}\r\n                            onChange={evt => setFormVal(evt)}\r\n                        />\r\n                        {isNotValid() && <div className='flex justify-start items-center text-red-500 text-xs mt-1'>Password is required</div>}\r\n                        {formRef.current[formKey].length > 0 && <PasswordStrengthBar password={formRef.current[formKey]} className=\"mt-2\" onChangeScore={(score, feed) => scoreFeed(score, feed)} />}\r\n                    </div>\r\n                    &nbsp;&nbsp;&nbsp;\r\n                    <div class=\"w-1/2 ... \">\r\n                        <label className=\"text-gray-600 mb-1 required\">Re-Password</label>\r\n                        <input\r\n                            type=\"password\"\r\n                            className={`border ${comparePass() ? 'border-red-500' : 'border-gray-400'} w-full p-1 border border-slate-300 hover:border-red-800 ... rounded focus:border-dodge-b`}\r\n                            placeholder=\"Re-type password\"\r\n                            value={formRef.current[`${formKey}_re`]}\r\n                            onChange={e => rePass(e)}\r\n                        />\r\n                        {comparePass() && <div className='flex justify-start items-center text-red-500 text-xs mt-1'>Password not matched</div>}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n});\r\n"]},"metadata":{},"sourceType":"module"}