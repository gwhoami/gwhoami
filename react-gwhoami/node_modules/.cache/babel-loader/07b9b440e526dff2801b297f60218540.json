{"ast":null,"code":"var _jsxFileName = \"D:\\\\Git-Repo\\\\gwhoami\\\\react-gwhoami\\\\src\\\\container\\\\passwordPages\\\\verifyEmail.js\",\n    _s = $RefreshSig$();\n\nimport { faEnvelope } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React, { useContext, useEffect, useRef, useState } from \"react\";\nimport { apiPostCall } from \"../../helper/API\";\nimport { TinyLoader } from \"../../helper/formElements\";\nimport ToastMessage from \"../../toast\";\nimport { MenuContext } from \"../../util/maincontext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst VerifyEmail = /*#__PURE__*/_s( /*#__PURE__*/React.memo(_c = _s(() => {\n  _s();\n\n  const {\n    goTo\n  } = useContext(MenuContext);\n  const [, subRefresh] = useState(-1);\n  const formData = useRef({\n    username: '',\n    mode: 1,\n    isValid: true,\n    failedMessage: '',\n    isLoading: false\n  });\n  const isEmail = useRef(new RegExp('[a-z0-9]+@[a-z]+\\\\.[a-z]{2,3}'));\n\n  const setFormValue = (e, key) => {\n    formData.current[key] = e.currentTarget.value;\n    formData.current.isValid = true;\n    subRefresh(Date.now());\n  };\n\n  useEffect(() => {\n    goTo(-1); // eslint-disable-next-line\n  }, []);\n\n  const checkValidattion = () => {\n    if (!formData.current.username.trim()) {\n      formData.current.isValid = false;\n      formData.current.failedMessage = 'Email is required';\n      subRefresh(Date.now());\n      return false;\n    } else if (!isEmail.current.test(formData.current.username.trim())) {\n      formData.current.isValid = false;\n      formData.current.failedMessage = 'Invalid email address';\n      subRefresh(Date.now());\n      return false;\n    }\n\n    return true;\n  };\n\n  const verfiyEmail = () => {\n    if (!checkValidattion()) return;\n    formData.current.isLoading = true;\n    subRefresh(Date.now());\n\n    (async () => {\n      const res = await apiPostCall('/api/user/verifyemail', {\n        username: formData.current.username,\n        changeURL: encodeURIComponent(`${process.env.REACT_APP_BASE_URL}/home/passwordreset`)\n      });\n\n      if (res.isError) {\n        ToastMessage({\n          type: \"error\",\n          message: res.Error.response.data.message,\n          timeout: 2000\n        });\n        formData.current.isLoading = false;\n        subRefresh(Date.now());\n      } else {\n        formData.current.isLoading = false;\n\n        if (!res.success) {\n          ToastMessage({\n            type: \"error\",\n            message: 'Invalid email address!',\n            timeout: 2000\n          });\n        } else formData.current.mode = 2;\n\n        subRefresh(Date.now());\n      }\n    })();\n  };\n\n  if (formData.current.mode === 2) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col my-20\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container max-w-xl mx-auto text-xl flex flex-col\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Password reset URL has been send to you email address. Please check you email inbox and reset your password!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"mt-5\",\n        children: [\"Thanks,\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 47\n        }, this), \"Gwhoami Admin\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);else return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col my-20\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container max-w-md mx-auto flex-1 flex flex-col items-center justify-center px-2\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white px-6 py-8 rounded-xl shadow-md text-black w-full\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"mb-8 text-3xl text-left\",\n          children: \"Verify Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"relative text-gray-700 mb-8\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: `w-full h-10 pl-9 pr-3 text-base placeholder-gray-600 border rounded-lg focus:shadow-outline${!formData.current.isValid ? ' border-red-500' : ''}`,\n            type: \"text\",\n            placeholder: \"Email address\",\n            value: formData.current.username,\n            onChange: e => setFormValue(e, 'username')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"absolute inset-y-0 left-1 mt-0.5 flex items-center px-2 pointer-events-none\",\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faEnvelope,\n              className: \"text-xl\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this), !formData.current.isValid && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"absolute left-0 bottom-0 -mb-5 text-xs text-red-500\",\n            children: formData.current.failedMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 55\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-center mb-5\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"h-14 px-32 m-2 text-indigo-100 transition-colors duration-150 bg-dodge-b rounded-full shadow-md shadow-gray-500 focus:shadow-outline hover:bg-dodge-d\",\n            onClick: verfiyEmail,\n            children: formData.current.isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-12 flex justify-center\",\n              children: /*#__PURE__*/_jsxDEV(TinyLoader, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 100\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 58\n            }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: \"Verify\"\n            }, void 0, false)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n}, \"U1s95bEZb0hUTXMqcANVDXj8PEM=\")), \"U1s95bEZb0hUTXMqcANVDXj8PEM=\");\n\n_c2 = VerifyEmail;\nexport default VerifyEmail;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"VerifyEmail$React.memo\");\n$RefreshReg$(_c2, \"VerifyEmail\");","map":{"version":3,"sources":["D:/Git-Repo/gwhoami/react-gwhoami/src/container/passwordPages/verifyEmail.js"],"names":["faEnvelope","FontAwesomeIcon","React","useContext","useEffect","useRef","useState","apiPostCall","TinyLoader","ToastMessage","MenuContext","VerifyEmail","memo","goTo","subRefresh","formData","username","mode","isValid","failedMessage","isLoading","isEmail","RegExp","setFormValue","e","key","current","currentTarget","value","Date","now","checkValidattion","trim","test","verfiyEmail","res","changeURL","encodeURIComponent","process","env","REACT_APP_BASE_URL","isError","type","message","Error","response","data","timeout","success"],"mappings":"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","sourcesContent":["import { faEnvelope } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useContext, useEffect, useRef, useState } from \"react\";\r\nimport { apiPostCall } from \"../../helper/API\";\r\nimport { TinyLoader } from \"../../helper/formElements\";\r\nimport ToastMessage from \"../../toast\";\r\nimport { MenuContext } from \"../../util/maincontext\";\r\n\r\nconst VerifyEmail = React.memo(() => {\r\n    const {goTo} = useContext(MenuContext);\r\n    const [, subRefresh] = useState(-1);\r\n    const formData = useRef({\r\n        username: '',\r\n        mode: 1,\r\n        isValid: true,\r\n        failedMessage: '',\r\n        isLoading: false\r\n    });\r\n    const isEmail = useRef(new RegExp('[a-z0-9]+@[a-z]+\\\\.[a-z]{2,3}'))\r\n    const setFormValue = (e, key) => {\r\n        formData.current[key] = e.currentTarget.value;\r\n        formData.current.isValid = true;\r\n        subRefresh(Date.now());\r\n    }\r\n    useEffect(()=>{\r\n        goTo(-1);\r\n        // eslint-disable-next-line\r\n    }, []);\r\n    const checkValidattion = () => {\r\n        if (!formData.current.username.trim()) {\r\n            formData.current.isValid = false;\r\n            formData.current.failedMessage = 'Email is required';\r\n            subRefresh(Date.now());\r\n            return false;\r\n        } else if (!isEmail.current.test(formData.current.username.trim())) {\r\n            formData.current.isValid = false;\r\n            formData.current.failedMessage = 'Invalid email address';\r\n            subRefresh(Date.now());\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    const verfiyEmail = () => {\r\n        if (!checkValidattion()) return;\r\n        formData.current.isLoading = true;\r\n        subRefresh(Date.now());\r\n        (async()=>{\r\n            const res = await apiPostCall('/api/user/verifyemail', {username: formData.current.username,changeURL: encodeURIComponent(`${process.env.REACT_APP_BASE_URL}/home/passwordreset`)});\r\n            if (res.isError) {\r\n                ToastMessage({ type: \"error\", message: res.Error.response.data.message, timeout: 2000 });\r\n                formData.current.isLoading = false;\r\n                subRefresh(Date.now());\r\n            } else {\r\n                formData.current.isLoading = false;\r\n                if (!res.success) {\r\n                    ToastMessage({ type: \"error\", message: 'Invalid email address!', timeout: 2000 });\r\n                } else formData.current.mode = 2;\r\n                subRefresh(Date.now());\r\n            }\r\n        })();\r\n    }\r\n    if (formData.current.mode === 2) return (\r\n        <div className=\"flex flex-col my-20\">\r\n            <div className=\"container max-w-xl mx-auto text-xl flex flex-col\">\r\n                <span>Password reset URL has been send to you email address. Please check you email inbox and reset your password!</span>\r\n                <span className=\"mt-5\">Thanks,<br/>Gwhoami Admin</span>\r\n            </div>\r\n        </div>\r\n    );\r\n    else return (\r\n        <div className=\"flex flex-col my-20\">\r\n            <div className=\"container max-w-md mx-auto flex-1 flex flex-col items-center justify-center px-2\">\r\n                <div className=\"bg-white px-6 py-8 rounded-xl shadow-md text-black w-full\">\r\n                    <h1 className=\"mb-8 text-3xl text-left\">Verify Email</h1>\r\n                    <div className=\"relative text-gray-700 mb-8\">\r\n                        <input \r\n                            className={`w-full h-10 pl-9 pr-3 text-base placeholder-gray-600 border rounded-lg focus:shadow-outline${!formData.current.isValid ? ' border-red-500' : ''}`}\r\n                            type=\"text\"\r\n                            placeholder=\"Email address\"\r\n                            value={formData.current.username}\r\n                            onChange={e=>setFormValue(e, 'username')}\r\n                        />\r\n                        <div className=\"absolute inset-y-0 left-1 mt-0.5 flex items-center px-2 pointer-events-none\">\r\n                            <FontAwesomeIcon icon={faEnvelope} className=\"text-xl\"/>\r\n                        </div>\r\n                        {!formData.current.isValid && <span className=\"absolute left-0 bottom-0 -mb-5 text-xs text-red-500\">{formData.current.failedMessage}</span>}\r\n                    </div>\r\n                    <div className=\"flex justify-center mb-5\">\r\n                        <button \r\n                            className=\"h-14 px-32 m-2 text-indigo-100 transition-colors duration-150 bg-dodge-b rounded-full shadow-md shadow-gray-500 focus:shadow-outline hover:bg-dodge-d\"\r\n                            onClick={verfiyEmail}\r\n                        >\r\n                            {formData.current.isLoading ?<div className=\"w-12 flex justify-center\"><TinyLoader/></div>: <>Verify</>}\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default VerifyEmail;"]},"metadata":{},"sourceType":"module"}